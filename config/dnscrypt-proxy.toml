##############################################
#                                            #
#        dnscrypt-proxy configuration        #
#                                            #
##############################################

## You should adjust it to your needs, and save it as "dnscrypt-proxy.toml"
##
## Online documentation is available here: https://dnscrypt.info/doc


###############################################################################
#                             Global settings                                  #
###############################################################################

## List of servers to use
##
## Servers from the "public-resolvers" source (see down below) can
## be viewed here: https://dnscrypt.info/public-servers
##
## The proxy will automatically pick working servers from this list.
## Note that the require_* filters do NOT apply when using this setting.
##
## By default, this list is empty and all registered servers matching the
## require_* filters will be used instead.
##
## Remove the leading # first to enable this; lines starting with # are ignored.

server_names = ['cloudflare', 'google', 'quad9-dnscrypt-ip4-filter-pri', 'd0wn-random'] # UNCOMMENT THIS LINE AND USE THESE SERVERS


## List of local addresses and ports to listen to. Can be IPv4 and/or IPv6.
## Example with both IPv4 and IPv6:
## listen_addresses = ['127.0.0.1:53', '[::1]:53']
##
## To listen to all IPv4 addresses, use `listen_addresses = ['0.0.0.0:53']`
## To listen to all IPv4+IPv6 addresses, use `listen_addresses = ['[::]:53']`

# listen_addresses = ['127.0.0.1:53', '[::1]:53'] # Keep this commented out if you're using system-wide redirection
# listen_addresses = ['0.0.0.0:53'] # Another option if you need it accessible on the local network


## Server must support DNS security extensions (DNSSEC)
require_dnssec = true # CHANGE THIS FROM 'false' TO 'true'


## Server must not log user queries
# require_nolog = false


## Server must not use the default port (443)
# require_nodefault_port = false


## Server must be located in a specific country
# require_country = ['ch', 'us']


## Speed test to pick the fastest servers
## If the list of servers is empty, the fastest server is picked.
## Otherwise, servers are picked randomly from the fastest ones.
# ephemeral_ports = true


## Block IPv6 queries if the client is only using IPv4
# block_ipv6 = true


## Load servers from a trusted source
## The URL is expected to return a TOML-formatted file.
## Example of a trusted source: https://raw.githubusercontent.com/DNSCrypt/dnscrypt-proxy/master/dnscrypt-proxy/public-resolvers.md
# public_resolvers_url = 'https://raw.githubusercontent.com/dnscrypt/dnscrypt-proxy/master/dnscrypt-proxy/public-resolvers.md'


## Source for `doh` servers
# doh_servers_url = 'https://raw.githubusercontent.com/dnscrypt/dnscrypt-proxy/master/dnscrypt-proxy/doh-servers.md'


## Source for `fallback` servers
# fallback_resolvers_url = 'https://raw.githubusercontent.com/dnscrypt/dnscrypt-proxy/master/dnscrypt-proxy/fallback-resolvers.md'


## Source for `relays`
# relays_url = 'https://raw.githubusercontent.com/dnscrypt/dnscrypt-proxy/master/dnscrypt-proxy/relays.md'


## Timeout for a DNS query, in seconds
# timeout = 5


## Maximum number of concurrent outgoing queries
# max_clients = 256


## Cache for DNS queries.
## If `cache = false`, DNS queries are not cached.
# cache = true


## Cache size, in number of entries.
## Defaults to 256
# cache_size = 256


## Cache minimum TTL. Responses with a TTL lower than this value will be cached
## for at least this duration. This can improve performance and reduce the load
## on upstream servers.
## Defaults to 60 seconds (1 minute)
# cache_min_ttl = 60


## Cache maximum TTL. Responses with a TTL higher than this value will be cached
## for at most this duration. This can prevent caching responses for too long.
## Defaults to 86400 seconds (24 hours)
# cache_max_ttl = 86400


## Prefetching: automatically refresh expired entries in the cache
# prefetch = true


## Preload local cache with entries for popular TLDs and domains (DNSSEC-enabled)
# preload_cache = true


## Number of workers to use for prefetching
# prefetch_workers = 1


## Keepalive duration for TCP connections, in seconds
# keepalive = 10


## Optional path to a file to log queries to
# log_file = 'dnscrypt-proxy.log'


## Maximum log file size in megabytes before it's rotated
# log_files_max_size = 10


## Maximum number of rotated log files to keep
# log_files_max_backups = 1


## Rotate log files daily
# log_files_compress = false


## Print system service messages (e.g., info about connections, server status) to stdout
# log_level = 0 # 0 for default, 1 for debug, 2 for verbose


## Enable DNSSEC validation on the client side (experimental)
# client_dnssec_enabled = false


## Enable DNSSEC validation for all queries (experimental)
# client_dnssec_full_chain = false


## Enable DNSSEC validation with specific algorithms (experimental)
# client_dnssec_algorithms = ['SHA256', 'ECDSA']


## Enable DNSSEC validation with specific root hints (experimental)
# client_dnssec_root_hints = '/etc/dnscrypt-proxy/dnssec-root-hints.md'


## Enable DNSSEC validation with specific trust anchors (experimental)
# client_dnssec_trust_anchors = '/etc/dnscrypt-proxy/dnssec-trust-anchors.md'


## Use the latest protocol for DNS-over-HTTPS (DoH)
# doh_use_latest_protocol = true


## Enable DNS-over-HTTPS (DoH) with specific protocols (e.g., H2, H3, H3-only)
# doh_protocol_preference = []


## Optional path to a file with IP addresses or CIDR ranges to block
## IP addresses will be blocked for servers from the `public-resolvers` source.
## For `server_names`, these are only used if `block_ips_for_named_servers` is true.
# blocked_ips = ['1.2.3.4', '192.168.1.0/24']


## Block IPs for explicit `server_names` also
# block_ips_for_named_servers = false


## Path to a file to log blocked IPs
# blocked_ips_log_file = 'blocked_ips.log'


## Maximum log file size in megabytes before it's rotated
# blocked_ips_log_files_max_size = 10


## Maximum number of rotated log files to keep
# blocked_ips_log_files_max_backups = 1


## Block domains using a local list
# blocked_names = ['example.com', 'bad-site.org']


## Log blocked domains to a file
# blocked_names_log_file = 'blocked_names.log'


## Maximum log file size in megabytes before it's rotated
# blocked_names_log_files_max_size = 10


## Maximum number of rotated log files to keep
# blocked_names_log_files_max_backups = 1


## Block IP addresses using a local list
# blocked_ips_file = 'blocked_ips.txt'


## Block domains using a remote list
# blocked_names_url = 'https://raw.githubusercontent.com/DNSCrypt/dnscrypt-proxy/master/dnscrypt-proxy/blocked-names.md'


## Block IP addresses using a remote list
# blocked_ips_url = 'https://raw.githubusercontent.com/DNSCrypt/dnscrypt-proxy/master/dnscrypt-proxy/blocked-ips.md'


## List of IP addresses or CIDR ranges to forward directly to the system resolver
## This is useful for local network queries or specific services.
# bypass_ips = ['192.168.1.0/24', '10.0.0.0/8']


## Log queries that are bypassed
# bypass_log_file = 'bypass.log'


## Maximum log file size in megabytes before it's rotated
# bypass_log_files_max_size = 10


## Maximum number of rotated log files to keep
# bypass_log_files_max_backups = 1


## Block domains from the local hosts file
# block_local_hostnames = true


## Configure the server selection strategy
# server_selection_strategy = 'p-d' # p: ping, d: fallback, r: random, m: min_rtt, c: concurrency


## If set to `true`, the proxy will ignore the system's DNS resolver and use its own.
## Useful for situations where the system resolver is misconfigured or unreliable.
# ignore_system_resolver = true


## Path to a custom resolvers file (e.g., dnscrypt-resolvers.csv)
# resolvers_file = '/etc/dnscrypt-proxy/dnscrypt-resolvers.csv'


## This file contains certificates for trusted root CAs.
# ca_certs_file = '/etc/ssl/certs/ca-certificates.crt'


## Limit the number of DNS queries per second for a given client IP address.
## This can prevent abuse or excessive resource consumption.
# query_per_second_limit = 10


## Enable the monitoring UI
# enabled = false


## Listen address for the monitoring UI
# listen_address = "127.0.0.1:8080"


## Optional username and password for basic authentication
## To disable authentication, set username to an empty string: username = ""
## If both username and password are empty, no authentication is required
# username = "admin"
# password = "changeme"


## Optional TLS certificate and key for HTTPS
## If both are empty, HTTP will be used
# tls_certificate = ""
# tls_key = ""


## Enable query logging in the monitoring UI
## This will show recent queries in the UI
# enable_query_log = true


## Privacy level for the monitoring UI
## 0: show all details including client IPs
## 1: anonymize client IPs (default)
## 2: aggregate data only (no individual queries or domains shown)
# privacy_level = 1


###############################################################################
#                            Static entries                                    #
###############################################################################

[static]

## Optional, local, static list of additional servers
## Mostly useful for testing your own servers.

# [static.myserver]
#   stamp = 'sdns://AQcAAAAAAAAAAAAQMi5kbnNjcnlwdC1jZXJ0Lg'
